import wrapWithProvider from './wrap-with-provider';
import { ChunkExtractor } from '@loadable/server';
import path from 'path';

// Needed for using loadable with ssr
// https://loadable-components.com/docs/server-side-rendering/
// See also: https://github.com/graysonhicks/gatsby-plugin-loadable-components-ssr
// I did not use the plugin though due to path issues
const extractor = new ChunkExtractor({
  // Read the stats file generated by webpack loadable plugin.
  statsFile: path.resolve('./public/loadable-stats.json'),
  entrypoints: [],
});

export const wrapRootElement = ({ element }) =>
  wrapWithProvider(element, extractor);

/*  TODO: also needed here?

window.commitHash = COMMITHASH;
window.version = VERSION;
*/

export const onRenderBody = ({ setPostBodyComponents, setHeadComponents }) => {
  // Set link rel="preload" tags in the head to start the request asap. This will NOT parse the assets fetched
  setHeadComponents(extractor.getLinkElements());

  // Set script and style tags at the end of the document to parse the assets.
  setPostBodyComponents([
    ...extractor.getScriptElements(),
    ...extractor.getStyleElements(),
  ]);

  // Reset collected chunks after each page is rendered
  extractor.chunks = [];
};
