@import '../../style/vars.less';

.header {
  .headerFooterGrid();
  z-index: 10;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: @grey;
  grid-template-rows: @headerHeight;

  @media (max-width: @breakPointS) {
    grid-template-rows: @headerHeightS;
  }
}

.titleLink {
  text-decoration: none;
}

.title {
  grid-column: 2;
  margin: 0.8rem 0;
  width: 15rem;

  @media (max-width: @breakPointS) {
    width: 10.7rem;
  }
}

.inner {
  grid-column: 2 / 4;
  display: flex;
  justify-content: space-between;
}

.logo {
  height: 100%;
  display: block;
}

.nav {
  font-size: @fontSizeM;

  @media (max-width: 900px) {
    font-size: @fontSizeS;
  }
}

.navList {
  padding: 0;
  list-style: none;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin: 0;
  height: 100%;

  @media (max-width: @breakPointM) {
    position: absolute;
    left: 0;
    top: 100%;
    width: 100%;
    padding: 1rem;
    background: @grey;
    display: none;
    height: auto;

    &.isOpen,
    &:focus-within {
      display: block;
    }
  }
}

.navItem {
  @media (min-width: @breakPointM) {
    &:not(.navItemChild) {
      & + & {
        margin-left: 1rem;
      }
    }
  }
  @media (max-width: @breakPointM) {
    &:not(.navItemChild) {
      & + & {
        margin-top: 1rem;
      }
    }
  }
}

.navItemChild {
  & + & {
    margin-top: 1rem;

    @media (max-width: @breakPointM) {
      margin-top: 0.5rem;
    }
  }
}

.menuButton {
  width: 3rem;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  background: transparent;
  border: none;

  @media (min-width: @breakPointM) {
    display: none;
  }
}

.menuButtonBars {
  height: 2rem;
  width: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: stretch;
  cursor: pointer;
}

.menuButtonBar {
  background: @red;
  height: 0.3rem;
}

.menuItemParentChildren {
  list-style: none;

  .navItemParent:hover & {
    height: auto;
    width: 30rem;
  }

  .navItemParent:focus-within & {
    height: auto;
    width: 30rem;
  }

  @media (max-width: @breakPointM) {
    padding: 0.5rem 0 0 1rem;
  }

  @media (min-width: @breakPointM) {
    height: 1px;
    width: 1px;
    padding: 0;
    text-align: right;
    position: absolute;
    top: 100%;
    right: -2rem;
    overflow: hidden;
  }
}

.menuItemParentChildrenInner {
  list-style: none;
  padding: 0;

  @media (min-width: @breakPointM) {
    background: @grey;
    padding: 2rem 2rem 2rem;
    display: inline-block;
  }
}

.navItemParent {
  position: relative;
}

.menuItemParentTitle {
  cursor: default;
}

.loginParentTitle {
  display: flex;
  justify-content: flex-start;
  align-items: center;

  @media (min-width: @breakPointM) {
    justify-content: center;
  }

  .loginParentAvatar {
    width: 2rem;
    margin-right: 0.75rem;
  }
}

button {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
  text-align: left;
}

.link {
  .menuLink();

  &.linkActive,
  &:hover {
    .linkUnderlined();
  }
}

.ctaButtonWrapper {
  display: flex !important;
  align-items: center;
}

.ctaButton {
  align-self: center;
  --font-color: @red;
  animation-name: wiggle;
  animation-duration: 8s;
  animation-iteration-count: infinite;
  transform-origin: center;

  @media (max-width: @breakPointS) {
    border-radius: @borderRadiusSmall !important;
    animation-name: wiggleRotated;
    padding: 0.5rem 0.5rem 0.2rem !important;
    margin: 0 -2rem 0 -2rem;
    transform: rotate(20deg);

    &:not(:hover) {
      background: @grey !important;
    }
  }

  @media (max-width: @breakPointL) {
    font-size: @fontSizeS !important;
  }

  @media (max-width: 370px) {
    margin: 0 -2rem 0 -6rem;
  }
}

@keyframes wiggle {
  0% {
    transform: rotate(-10deg);
  }
  2% {
    transform: rotate(-4deg);
  }
  4% {
    transform: rotate(-10deg);
  }
  6% {
    transform: rotate(-4deg);
  }
  8% {
    transform: rotate(-10deg);
  }
  10% {
    transform: rotate(-7deg);
  }
  100% {
    transform: rotate(-7deg);
  }
}

@keyframes wiggleRotated {
  0% {
    transform: rotate(23deg);
  }
  2% {
    transform: rotate(17deg);
  }
  4% {
    transform: rotate(23deg);
  }
  6% {
    transform: rotate(17deg);
  }
  8% {
    transform: rotate(23deg);
  }
  10% {
    transform: rotate(20deg);
  }
  100% {
    transform: rotate(20deg);
  }
}
