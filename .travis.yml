language: node_js

node_js:
  - '10.16.3'

before_install:
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - |
    if [ $TRAVIS_BRANCH == "master" ] && [ $IS_CONTENTFUL == "yes" ]; then
      echo "is from contentful"
      eval export CLOUDFRONT_DISTRIBUTION="$PROD_CLOUDFRONT_DISTRIBUTION"
    elif [ $TRAVIS_BRANCH == "master" ]; then
      echo "is from master"
      eval export CLOUDFRONT_DISTRIBUTION="$PROD_CLOUDFRONT_DISTRIBUTION"
    elif [ $TRAVIS_TAG ]; then
      echo "has tag"
      eval export CLOUDFRONT_DISTRIBUTION="$DEMO_CLOUDFRONT_DISTRIBUTION"
    elif [ $TRAVIS_BRANCH == "dev" ]; then
      echo "is from dev"
      eval export CLOUDFRONT_DISTRIBUTION="$DEV_CLOUDFRONT_DISTRIBUTION"
    fi
  - echo $CLOUDFRONT_DISTRIBUTION
  - echo $TRAVIS_BRANCH
  - echo $IS_CONTENTFUL
  - echo IS_CONTENTFUL

cache: yarn

script:
  - yarn
  - yarn run lint
  - |
    cat > .env.production << EOF
    CONTENTFUL_SPACE_ID='`$CONTENTFUL_SPACE_ID`'
    CONTENTFUL_ACCESS_TOKEN='`$CONTENTFUL_ACCESS_TOKEN`'
    COGNITO_APP_CLIENT_ID='`$COGNITO_APP_CLIENT_ID`'
    EOF
  - yarn run build

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $PROD_S3_BUCKET
    acl: public_read
    local_dir: 'public'
    skip_cleanup: true
    script: env CLOUDFRONT_DISTRIBUTION=$PROD_CLOUDFRONT_DISTRIBUTION
    region: 'eu-central-1'
    on:
      branch: master
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $STAGING_S3_BUCKET
    acl: public_read
    local_dir: 'public'
    skip_cleanup: true
    script: env CLOUDFRONT_DISTRIBUTION=$STAGING_CLOUDFRONT_DISTRIBUTION
    region: 'eu-central-1'
    on:
      branch: master
      condition: $IS_CONTENTFUL=yes
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $DEV_S3_BUCKET
    acl: public_read
    local_dir: 'public'
    skip_cleanup: true
    region: 'eu-central-1'
    on:
      branch: dev
      tags: false
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket: $DEMO_S3_BUCKET
    acl: public_read
    local_dir: 'public'
    skip_cleanup: true
    region: 'eu-central-1'
    on:
      all_branches: true
      tags: true

after_deploy:
  - aws configure set preview.cloudfront true
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION --paths "/*"
